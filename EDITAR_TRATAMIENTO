/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package centro_odontologico;

import Conexion.Conexion;
import Report.Reportes;
import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Fer
 */
public class EditarTratamiento extends javax.swing.JFrame {
    Statement sent;
    CallableStatement callablestatement =null;
    Conexion xd = new Conexion();
    Connection cn = xd.conexion();
    DefaultTableModel modelo;
    /**
     * Creates new form EditarTratamiento
     */
    public EditarTratamiento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableEditarT = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("CENTRO ODONTOLOGICO");

        TableEditarT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Precio Inicial", "Descripcion"
            }
        ));
        jScrollPane3.setViewportView(TableEditarT);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jButton1.setText("Reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel3.setText("TRATAMIENTO");

        jButton3.setText("Ver Todo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(26, 459, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {                                           
         int fila= TableEditarT.getSelectedRow();
         if (fila==-1){
         JOptionPane.showMessageDialog(null,"No se ha seleccionado tratamiento alguno " ,"Mensaje del sistema", JOptionPane.WARNING_MESSAGE); 
        
        }else{
         int opcion=JOptionPane.showConfirmDialog(null, "Â¿Esta seguro de  guardar los cambios realizados?", "GUARDAR", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
                        if(opcion==JOptionPane.YES_OPTION)
                            guardarTratamientoProcedure();
                        else{
                            EditarTratamiento e= new EditarTratamiento();
                            dispose();
                            e.setVisible(true);
                        }
        
        }
    }                                          

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        int opcion=JOptionPane.showConfirmDialog(null, "Â¿Esta seguro de  eliminar este Tratamiento?", "ELIMINAR", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
                        if(opcion==JOptionPane.YES_OPTION)
                            eliminarTratamiento();
                        else{
                            EditarTratamiento e= new EditarTratamiento();
                            dispose();
                            e.setVisible(true);
                        }
        
    }                                           

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
        generareporte();
    }                                        

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        Principal_menu e= new Principal_menu();
                            dispose();
                            e.setVisible(true);
    }                                           

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        cargarTratamientos();
    }                                        

    /**
     * @param args the command line arguments
     */
    
    public void cargarTratamientos(){
        String [] titulos={"Nombre","PrecioInicial", "Descripcion"};
        String [] registros= new String[3];
        String sql= "Select * from tratamiento";
        modelo = new DefaultTableModel(null, titulos);
        
        try {
            java.sql.Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);   
            
            while (rs.next()){ 
                registros[0]= rs.getString("Nombre");
                registros[1]= rs.getString("PrecioInicial");
                registros[2]= rs.getString("Descripcion");
                modelo.addRow(registros);
                TableEditarT.setModel(modelo);
            }
        } 
        catch (SQLException ex) {
            System.out.println("Error: "+ex.getMessage());
           }
    }
    
    public void eliminarTratamiento(){
        try {
            int fila= TableEditarT.getSelectedRow();
            String sql = "DELETE from tratamiento where Nombre="+ "'" +TableEditarT.getValueAt(fila, 0) + "'";
            sent = cn.createStatement();
            int n= sent.executeUpdate(sql);
            if (n>0) {
                cargarTratamientos();
                JOptionPane.showMessageDialog(null, "Datos Eliminados!!!");
            }
        } catch (SQLException e) {
            if (e.getErrorCode()==1451){
                JOptionPane.showMessageDialog(null,"Tratamiento en uso", "Error al Eliminar", JOptionPane.ERROR_MESSAGE);
            } else
            JOptionPane.showMessageDialog(null,"Error al Eliminar" + e.getErrorCode());
        }
    }
    
    public void guardarTratamientoProcedure(){
        int fila = TableEditarT.getSelectedRow();
        try {
            String procedure = "{call guardarTratamiento(?,?,?)}"; //DEFINIDO EL PROCEDURE
            callablestatement = cn.prepareCall(procedure);
            String name = (String) TableEditarT.getValueAt(fila, 0);
            
            callablestatement.setString(1, name);
            callablestatement.setString(2, (String) TableEditarT.getValueAt(fila, 1));
            callablestatement.setString(3, (String) TableEditarT.getValueAt(fila, 2));
            callablestatement.executeUpdate();
            cargarTratamientos();
            //bloquear();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR"+ e);
        }
    }
//    public void guardarTratamiento(){ //SIN PROCEDURE
//        Conexion cc= new Conexion();
//        Connection cn= cc.conexion();
//        int fila= TableEditarT.getSelectedRow();
//        try {
//            String name=(String) TableEditarT.getValueAt(fila, 0);
//            
//            PreparedStatement pst= cn.prepareStatement("UPDATE tratamiento SET Nombre='" + TableEditarT.getValueAt(fila, 0) 
//                    +"',PrecioInicial='" +TableEditarT.getValueAt(fila, 1)
//                    +"',Descripcion='" +TableEditarT.getValueAt(fila, 2)
//                    +"' WHERE Nombre='"+name+"'");
//            pst.executeUpdate();
//            cargarTratamientos();    
//        } 
//        catch (Exception e) {
//        JOptionPane.showMessageDialog(null, "ERROR"+ e);
//        }
//    }
    
    
//    public void buscarTratamiento(){
//     String [] titulos={"Nombre","PrecioInicial", "Descripcion"};
//     String [] registros= new String[3];
//     String procedure = "{call buscarNombreTratamiento(?)}"; //DEFINIDO EL PROCEDURE
//     modelo = new DefaultTableModel(null, titulos);     
//            
//            try {                           
//                callablestatement = cn.prepareCall(procedure);
//                callablestatement.setString(1,txtName.getText());  
//                ResultSet rs = callablestatement.executeQuery();//se pone sin nada adentro del executeQuery() cuando se usa estore procedure
//                while (rs.next()){
//                    registros[0]= rs.getString("Nombre");
//                    registros[1]= rs.getString("PrecioInicial");
//                    registros[2]= rs.getString("Descripcion");
//                    modelo.addRow(registros);
//                    TableEditarT.setModel(modelo);    
//                }
//                if(registros[0]==null){
//                    JOptionPane.showMessageDialog(null,"No se ha encontrado ningun Paciente con cedula: " + txtName.getText(),"Mensaje del sistema", JOptionPane.WARNING_MESSAGE); 
//                    TableEditarT.setModel(modelo);  
//                }            
//            }catch (SQLException ex){
//                JOptionPane.showMessageDialog(null, ex);
//            }
//    }
    
    private void generareporte() {                
        try {
            Reportes re = new Reportes();
            re.reporteFacturas("TRATAMIENTO");
        }catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Error en Informe",
                "ERROR", JOptionPane.ERROR_MESSAGE);
        }catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "CÃ³digo de Error: " + sqle.getErrorCode() + "\n" +
                    "Estado de Error: " + sqle.getSQLState() + "\n" + 
                    "Mensaje de Error: " + sqle.getMessage(),
                    "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        
    }
       
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarTratamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarTratamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarTratamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarTratamiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarTratamiento().setVisible(true);
            }
        });
    }
    
    
    

    // Variables declaration - do not modify                     
    private javax.swing.JTable TableEditarT;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration                   
}
